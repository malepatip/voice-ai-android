# Multi-arch Dockerfile for ARM Kubernetes backend
# Supports both arm64 and amd64 architectures

FROM --platform=$BUILDPLATFORM node:18-alpine AS builder

WORKDIR /app

# Install dependencies
COPY package*.json ./
RUN npm ci --only=production

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage - ARM64 optimized
FROM --platform=$TARGETPLATFORM node:18-alpine AS production

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

WORKDIR /app

# Copy built application
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nodejs:nodejs /app/package*.json ./

# Switch to non-root user
USER nodejs

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node dist/health.js || exit 1

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/server.js"]

# Labels for ARM architecture awareness
LABEL org.opencontainers.image.title="Voice AI Backend"
LABEL org.opencontainers.image.description="ARM-optimized backend for voice AI processing"
LABEL org.opencontainers.image.authors="VoiceAI Team"
LABEL org.opencontainers.image.architecture="$TARGETARCH"